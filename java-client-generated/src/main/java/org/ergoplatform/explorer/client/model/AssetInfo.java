/*
 * Ergo Explorer API v1
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.ergoplatform.explorer.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * AssetInfo
 */


public class AssetInfo {
  @SerializedName("headerId")
  private String headerId = null;

  @SerializedName("boxId")
  private String boxId = null;

  @SerializedName("tokenId")
  private String tokenId = null;

  @SerializedName("index")
  private Integer index = null;

  @SerializedName("amount")
  private Long amount = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("decimals")
  private Integer decimals = null;

  @SerializedName("type")
  private String type = null;

  public AssetInfo headerId(String headerId) {
    this.headerId = headerId;
    return this;
  }

   /**
   * Header ID this asset belongs to
   * @return headerId
  **/
  @Schema(required = true, description = "Header ID this asset belongs to")
  public String getHeaderId() {
    return headerId;
  }

  public void setHeaderId(String headerId) {
    this.headerId = headerId;
  }

  public AssetInfo boxId(String boxId) {
    this.boxId = boxId;
    return this;
  }

   /**
   * Box ID this asset belongs to
   * @return boxId
  **/
  @Schema(required = true, description = "Box ID this asset belongs to")
  public String getBoxId() {
    return boxId;
  }

  public void setBoxId(String boxId) {
    this.boxId = boxId;
  }

  public AssetInfo tokenId(String tokenId) {
    this.tokenId = tokenId;
    return this;
  }

   /**
   * Token ID
   * @return tokenId
  **/
  @Schema(required = true, description = "Token ID")
  public String getTokenId() {
    return tokenId;
  }

  public void setTokenId(String tokenId) {
    this.tokenId = tokenId;
  }

  public AssetInfo index(Integer index) {
    this.index = index;
    return this;
  }

   /**
   * Index of the asset in an output
   * @return index
  **/
  @Schema(required = true, description = "Index of the asset in an output")
  public Integer getIndex() {
    return index;
  }

  public void setIndex(Integer index) {
    this.index = index;
  }

  public AssetInfo amount(Long amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Amount of tokens
   * @return amount
  **/
  @Schema(required = true, description = "Amount of tokens")
  public Long getAmount() {
    return amount;
  }

  public void setAmount(Long amount) {
    this.amount = amount;
  }

  public AssetInfo name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the asset
   * @return name
  **/
  @Schema(description = "Name of the asset")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AssetInfo decimals(Integer decimals) {
    this.decimals = decimals;
    return this;
  }

   /**
   * Number of decimal places
   * @return decimals
  **/
  @Schema(description = "Number of decimal places")
  public Integer getDecimals() {
    return decimals;
  }

  public void setDecimals(Integer decimals) {
    this.decimals = decimals;
  }

  public AssetInfo type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Type of the asset (token standard)
   * @return type
  **/
  @Schema(description = "Type of the asset (token standard)")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AssetInfo assetInfo = (AssetInfo) o;
    return Objects.equals(this.headerId, assetInfo.headerId) &&
        Objects.equals(this.boxId, assetInfo.boxId) &&
        Objects.equals(this.tokenId, assetInfo.tokenId) &&
        Objects.equals(this.index, assetInfo.index) &&
        Objects.equals(this.amount, assetInfo.amount) &&
        Objects.equals(this.name, assetInfo.name) &&
        Objects.equals(this.decimals, assetInfo.decimals) &&
        Objects.equals(this.type, assetInfo.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(headerId, boxId, tokenId, index, amount, name, decimals, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssetInfo {\n");
    
    sb.append("    headerId: ").append(toIndentedString(headerId)).append("\n");
    sb.append("    boxId: ").append(toIndentedString(boxId)).append("\n");
    sb.append("    tokenId: ").append(toIndentedString(tokenId)).append("\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    decimals: ").append(toIndentedString(decimals)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
