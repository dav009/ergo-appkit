/*
 * Ergo Explorer API v1
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.ergoplatform.explorer.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.ergoplatform.explorer.client.model.MinerInfo;
/**
 * BlockInfo
 */


public class BlockInfo {
  @SerializedName("id")
  private String id = null;

  @SerializedName("height")
  private Integer height = null;

  @SerializedName("epoch")
  private Integer epoch = null;

  @SerializedName("version")
  private Integer version = null;

  @SerializedName("timestamp")
  private Long timestamp = null;

  @SerializedName("transactionsCount")
  private Integer transactionsCount = null;

  @SerializedName("miner")
  private MinerInfo miner = null;

  @SerializedName("size")
  private Integer size = null;

  @SerializedName("difficulty")
  private Long difficulty = null;

  @SerializedName("minerReward")
  private Long minerReward = null;

  public BlockInfo id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Block ID
   * @return id
  **/
  @Schema(required = true, description = "Block ID")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public BlockInfo height(Integer height) {
    this.height = height;
    return this;
  }

   /**
   * Block height
   * @return height
  **/
  @Schema(required = true, description = "Block height")
  public Integer getHeight() {
    return height;
  }

  public void setHeight(Integer height) {
    this.height = height;
  }

  public BlockInfo epoch(Integer epoch) {
    this.epoch = epoch;
    return this;
  }

   /**
   * Block epoch (Epochs are enumerated from 0)
   * @return epoch
  **/
  @Schema(required = true, description = "Block epoch (Epochs are enumerated from 0)")
  public Integer getEpoch() {
    return epoch;
  }

  public void setEpoch(Integer epoch) {
    this.epoch = epoch;
  }

  public BlockInfo version(Integer version) {
    this.version = version;
    return this;
  }

   /**
   * Block version
   * @return version
  **/
  @Schema(required = true, description = "Block version")
  public Integer getVersion() {
    return version;
  }

  public void setVersion(Integer version) {
    this.version = version;
  }

  public BlockInfo timestamp(Long timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Timestamp the block was created (UNIX timestamp in millis)
   * @return timestamp
  **/
  @Schema(required = true, description = "Timestamp the block was created (UNIX timestamp in millis)")
  public Long getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(Long timestamp) {
    this.timestamp = timestamp;
  }

  public BlockInfo transactionsCount(Integer transactionsCount) {
    this.transactionsCount = transactionsCount;
    return this;
  }

   /**
   * Number of transactions included in the block
   * @return transactionsCount
  **/
  @Schema(required = true, description = "Number of transactions included in the block")
  public Integer getTransactionsCount() {
    return transactionsCount;
  }

  public void setTransactionsCount(Integer transactionsCount) {
    this.transactionsCount = transactionsCount;
  }

  public BlockInfo miner(MinerInfo miner) {
    this.miner = miner;
    return this;
  }

   /**
   * Get miner
   * @return miner
  **/
  @Schema(required = true, description = "")
  public MinerInfo getMiner() {
    return miner;
  }

  public void setMiner(MinerInfo miner) {
    this.miner = miner;
  }

  public BlockInfo size(Integer size) {
    this.size = size;
    return this;
  }

   /**
   * Overall size of the block in bytes
   * @return size
  **/
  @Schema(required = true, description = "Overall size of the block in bytes")
  public Integer getSize() {
    return size;
  }

  public void setSize(Integer size) {
    this.size = size;
  }

  public BlockInfo difficulty(Long difficulty) {
    this.difficulty = difficulty;
    return this;
  }

   /**
   * Block difficulty
   * @return difficulty
  **/
  @Schema(required = true, description = "Block difficulty")
  public Long getDifficulty() {
    return difficulty;
  }

  public void setDifficulty(Long difficulty) {
    this.difficulty = difficulty;
  }

  public BlockInfo minerReward(Long minerReward) {
    this.minerReward = minerReward;
    return this;
  }

   /**
   * The amount of nanoErgs miner received as a reward for block
   * @return minerReward
  **/
  @Schema(required = true, description = "The amount of nanoErgs miner received as a reward for block")
  public Long getMinerReward() {
    return minerReward;
  }

  public void setMinerReward(Long minerReward) {
    this.minerReward = minerReward;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BlockInfo blockInfo = (BlockInfo) o;
    return Objects.equals(this.id, blockInfo.id) &&
        Objects.equals(this.height, blockInfo.height) &&
        Objects.equals(this.epoch, blockInfo.epoch) &&
        Objects.equals(this.version, blockInfo.version) &&
        Objects.equals(this.timestamp, blockInfo.timestamp) &&
        Objects.equals(this.transactionsCount, blockInfo.transactionsCount) &&
        Objects.equals(this.miner, blockInfo.miner) &&
        Objects.equals(this.size, blockInfo.size) &&
        Objects.equals(this.difficulty, blockInfo.difficulty) &&
        Objects.equals(this.minerReward, blockInfo.minerReward);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, height, epoch, version, timestamp, transactionsCount, miner, size, difficulty, minerReward);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BlockInfo {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    epoch: ").append(toIndentedString(epoch)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    transactionsCount: ").append(toIndentedString(transactionsCount)).append("\n");
    sb.append("    miner: ").append(toIndentedString(miner)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    difficulty: ").append(toIndentedString(difficulty)).append("\n");
    sb.append("    minerReward: ").append(toIndentedString(minerReward)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
