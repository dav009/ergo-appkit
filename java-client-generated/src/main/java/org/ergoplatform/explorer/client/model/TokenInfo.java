/*
 * Ergo Explorer API v1
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.ergoplatform.explorer.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * TokenInfo
 */


public class TokenInfo {
  @SerializedName("id")
  private String id = null;

  @SerializedName("boxId")
  private String boxId = null;

  @SerializedName("emissionAmount")
  private Long emissionAmount = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("decimals")
  private Integer decimals = null;

  public TokenInfo id(String id) {
    this.id = id;
    return this;
  }

   /**
   * ID of the asset
   * @return id
  **/
  @Schema(required = true, description = "ID of the asset")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public TokenInfo boxId(String boxId) {
    this.boxId = boxId;
    return this;
  }

   /**
   * Box ID this asset was issued by
   * @return boxId
  **/
  @Schema(required = true, description = "Box ID this asset was issued by")
  public String getBoxId() {
    return boxId;
  }

  public void setBoxId(String boxId) {
    this.boxId = boxId;
  }

  public TokenInfo emissionAmount(Long emissionAmount) {
    this.emissionAmount = emissionAmount;
    return this;
  }

   /**
   * Number of decimal places
   * @return emissionAmount
  **/
  @Schema(required = true, description = "Number of decimal places")
  public Long getEmissionAmount() {
    return emissionAmount;
  }

  public void setEmissionAmount(Long emissionAmount) {
    this.emissionAmount = emissionAmount;
  }

  public TokenInfo name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the asset
   * @return name
  **/
  @Schema(description = "Name of the asset")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TokenInfo description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of the asset
   * @return description
  **/
  @Schema(description = "Description of the asset")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public TokenInfo type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Asset type (token standard)
   * @return type
  **/
  @Schema(description = "Asset type (token standard)")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public TokenInfo decimals(Integer decimals) {
    this.decimals = decimals;
    return this;
  }

   /**
   * Number of decimal places
   * @return decimals
  **/
  @Schema(description = "Number of decimal places")
  public Integer getDecimals() {
    return decimals;
  }

  public void setDecimals(Integer decimals) {
    this.decimals = decimals;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TokenInfo tokenInfo = (TokenInfo) o;
    return Objects.equals(this.id, tokenInfo.id) &&
        Objects.equals(this.boxId, tokenInfo.boxId) &&
        Objects.equals(this.emissionAmount, tokenInfo.emissionAmount) &&
        Objects.equals(this.name, tokenInfo.name) &&
        Objects.equals(this.description, tokenInfo.description) &&
        Objects.equals(this.type, tokenInfo.type) &&
        Objects.equals(this.decimals, tokenInfo.decimals);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, boxId, emissionAmount, name, description, type, decimals);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TokenInfo {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    boxId: ").append(toIndentedString(boxId)).append("\n");
    sb.append("    emissionAmount: ").append(toIndentedString(emissionAmount)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    decimals: ").append(toIndentedString(decimals)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
