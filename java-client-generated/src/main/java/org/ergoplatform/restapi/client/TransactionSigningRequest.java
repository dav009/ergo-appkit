/*
 * Ergo Node API
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * OpenAPI spec version: 4.0.12
 * Contact: ergoplatform@protonmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.ergoplatform.restapi.client;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.ergoplatform.restapi.client.TransactionHintsBag;
import org.ergoplatform.restapi.client.TransactionSigningRequestSecrets;
import org.ergoplatform.restapi.client.UnsignedErgoTransaction;
/**
 * A request to sign a transaction with secrets provided
 */
@Schema(description = "A request to sign a transaction with secrets provided")

public class TransactionSigningRequest {
  @SerializedName("tx")
  private UnsignedErgoTransaction tx = null;

  @SerializedName("inputsRaw")
  private java.util.List<String> inputsRaw = null;

  @SerializedName("dataInputsRaw")
  private java.util.List<String> dataInputsRaw = null;

  @SerializedName("hints")
  private TransactionHintsBag hints = null;

  @SerializedName("secrets")
  private TransactionSigningRequestSecrets secrets = null;

  public TransactionSigningRequest tx(UnsignedErgoTransaction tx) {
    this.tx = tx;
    return this;
  }

   /**
   * Get tx
   * @return tx
  **/
  @Schema(required = true, description = "")
  public UnsignedErgoTransaction getTx() {
    return tx;
  }

  public void setTx(UnsignedErgoTransaction tx) {
    this.tx = tx;
  }

  public TransactionSigningRequest inputsRaw(java.util.List<String> inputsRaw) {
    this.inputsRaw = inputsRaw;
    return this;
  }

  public TransactionSigningRequest addInputsRawItem(String inputsRawItem) {
    if (this.inputsRaw == null) {
      this.inputsRaw = new java.util.ArrayList<String>();
    }
    this.inputsRaw.add(inputsRawItem);
    return this;
  }

   /**
   * Optional list of inputs to be used in serialized form
   * @return inputsRaw
  **/
  @Schema(description = "Optional list of inputs to be used in serialized form")
  public java.util.List<String> getInputsRaw() {
    return inputsRaw;
  }

  public void setInputsRaw(java.util.List<String> inputsRaw) {
    this.inputsRaw = inputsRaw;
  }

  public TransactionSigningRequest dataInputsRaw(java.util.List<String> dataInputsRaw) {
    this.dataInputsRaw = dataInputsRaw;
    return this;
  }

  public TransactionSigningRequest addDataInputsRawItem(String dataInputsRawItem) {
    if (this.dataInputsRaw == null) {
      this.dataInputsRaw = new java.util.ArrayList<String>();
    }
    this.dataInputsRaw.add(dataInputsRawItem);
    return this;
  }

   /**
   * Optional list of inputs to be used in serialized form
   * @return dataInputsRaw
  **/
  @Schema(description = "Optional list of inputs to be used in serialized form")
  public java.util.List<String> getDataInputsRaw() {
    return dataInputsRaw;
  }

  public void setDataInputsRaw(java.util.List<String> dataInputsRaw) {
    this.dataInputsRaw = dataInputsRaw;
  }

  public TransactionSigningRequest hints(TransactionHintsBag hints) {
    this.hints = hints;
    return this;
  }

   /**
   * Get hints
   * @return hints
  **/
  @Schema(description = "")
  public TransactionHintsBag getHints() {
    return hints;
  }

  public void setHints(TransactionHintsBag hints) {
    this.hints = hints;
  }

  public TransactionSigningRequest secrets(TransactionSigningRequestSecrets secrets) {
    this.secrets = secrets;
    return this;
  }

   /**
   * Get secrets
   * @return secrets
  **/
  @Schema(required = true, description = "")
  public TransactionSigningRequestSecrets getSecrets() {
    return secrets;
  }

  public void setSecrets(TransactionSigningRequestSecrets secrets) {
    this.secrets = secrets;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionSigningRequest transactionSigningRequest = (TransactionSigningRequest) o;
    return Objects.equals(this.tx, transactionSigningRequest.tx) &&
        Objects.equals(this.inputsRaw, transactionSigningRequest.inputsRaw) &&
        Objects.equals(this.dataInputsRaw, transactionSigningRequest.dataInputsRaw) &&
        Objects.equals(this.hints, transactionSigningRequest.hints) &&
        Objects.equals(this.secrets, transactionSigningRequest.secrets);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tx, inputsRaw, dataInputsRaw, hints, secrets);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionSigningRequest {\n");
    
    sb.append("    tx: ").append(toIndentedString(tx)).append("\n");
    sb.append("    inputsRaw: ").append(toIndentedString(inputsRaw)).append("\n");
    sb.append("    dataInputsRaw: ").append(toIndentedString(dataInputsRaw)).append("\n");
    sb.append("    hints: ").append(toIndentedString(hints)).append("\n");
    sb.append("    secrets: ").append(toIndentedString(secrets)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
