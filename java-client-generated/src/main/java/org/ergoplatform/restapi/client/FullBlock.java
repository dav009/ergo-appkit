/*
 * Ergo Node API
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * OpenAPI spec version: 4.0.12
 * Contact: ergoplatform@protonmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.ergoplatform.restapi.client;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.ergoplatform.restapi.client.BlockADProofs;
import org.ergoplatform.restapi.client.BlockHeader;
import org.ergoplatform.restapi.client.BlockTransactions;
import org.ergoplatform.restapi.client.Extension;
/**
 * Block with header and transactions
 */
@Schema(description = "Block with header and transactions")

public class FullBlock {
  @SerializedName("header")
  private BlockHeader header = null;

  @SerializedName("blockTransactions")
  private BlockTransactions blockTransactions = null;

  @SerializedName("adProofs")
  private BlockADProofs adProofs = null;

  @SerializedName("extension")
  private Extension extension = null;

  @SerializedName("size")
  private Integer size = null;

  public FullBlock header(BlockHeader header) {
    this.header = header;
    return this;
  }

   /**
   * Get header
   * @return header
  **/
  @Schema(required = true, description = "")
  public BlockHeader getHeader() {
    return header;
  }

  public void setHeader(BlockHeader header) {
    this.header = header;
  }

  public FullBlock blockTransactions(BlockTransactions blockTransactions) {
    this.blockTransactions = blockTransactions;
    return this;
  }

   /**
   * Get blockTransactions
   * @return blockTransactions
  **/
  @Schema(required = true, description = "")
  public BlockTransactions getBlockTransactions() {
    return blockTransactions;
  }

  public void setBlockTransactions(BlockTransactions blockTransactions) {
    this.blockTransactions = blockTransactions;
  }

  public FullBlock adProofs(BlockADProofs adProofs) {
    this.adProofs = adProofs;
    return this;
  }

   /**
   * Get adProofs
   * @return adProofs
  **/
  @Schema(required = true, description = "")
  public BlockADProofs getAdProofs() {
    return adProofs;
  }

  public void setAdProofs(BlockADProofs adProofs) {
    this.adProofs = adProofs;
  }

  public FullBlock extension(Extension extension) {
    this.extension = extension;
    return this;
  }

   /**
   * Get extension
   * @return extension
  **/
  @Schema(required = true, description = "")
  public Extension getExtension() {
    return extension;
  }

  public void setExtension(Extension extension) {
    this.extension = extension;
  }

  public FullBlock size(Integer size) {
    this.size = size;
    return this;
  }

   /**
   * Size in bytes
   * @return size
  **/
  @Schema(required = true, description = "Size in bytes")
  public Integer getSize() {
    return size;
  }

  public void setSize(Integer size) {
    this.size = size;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FullBlock fullBlock = (FullBlock) o;
    return Objects.equals(this.header, fullBlock.header) &&
        Objects.equals(this.blockTransactions, fullBlock.blockTransactions) &&
        Objects.equals(this.adProofs, fullBlock.adProofs) &&
        Objects.equals(this.extension, fullBlock.extension) &&
        Objects.equals(this.size, fullBlock.size);
  }

  @Override
  public int hashCode() {
    return Objects.hash(header, blockTransactions, adProofs, extension, size);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FullBlock {\n");
    
    sb.append("    header: ").append(toIndentedString(header)).append("\n");
    sb.append("    blockTransactions: ").append(toIndentedString(blockTransactions)).append("\n");
    sb.append("    adProofs: ").append(toIndentedString(adProofs)).append("\n");
    sb.append("    extension: ").append(toIndentedString(extension)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
